{
	"info": {
		"_postman_id": "ee985f11-f8f5-4a0d-a0c7-28f3eff9fe43",
		"name": "DBP Deployment Test",
		"description": "The Suite of cases are divided into 6\ndifferent categories\n1) Acs-basic-auth\n* Request to validate the discovery api\n* Request to validate modules are applied correctly\n2) Generate the token \n3) ACS-token-auth \n* Post to generate the token\n* Request to validate ACS request using token\n* Request to validate CMIS request using token\n* Request to validate vo request using token\n4) APS\n* Request to validate using token\n5) Sync service\n6) get way validation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01 ACS-basic-auth",
			"description": null,
			"item": [
				{
					"name": "Repository discovery with amp versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8496978a-e1a9-4ba9-afba-76aca7b469e1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"License is ENTERPRISE\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ENTERPRISE\");",
									"});",
									"",
									"",
									"pm.test(\"Module versions are valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    var modulesArray= jsonData.entry.repository.modules;",
									"    for(var key in modulesArray)",
									"    {",
									"        var obj = modulesArray[key];",
									"        var id = obj.id;",
									"        if (\"org_alfresco_module_rm\" === id)",
									"        {",
									"            pm.expect(obj.version).to.eql(\"2.6.0\");",
									"        }",
									"        if(\"alfresco-aos-module\" === id)",
									"        {",
									"            pm.expect(obj.version).to.eql(\"1.1.7\");",
									"        }",
									"        if(\"org.alfresco.integrations.google.docs\" === id)",
									"        {",
									"             pm.expect(obj.version).to.eql(\"3.0.4.2\");",
									"        }",
									"        if(\"org_alfresco_device_sync_repo\" === id)",
									"        {",
									"            pm.expect(obj.version).to.eql(\"2.2\");",
									"        }",
									"        if(\"alfresco-share-services\" === id)",
									"        {",
									"            pm.expect(obj.version).to.eql(\"6.0.0\");",
									"        }",
									"        if(\"alfresco-rm-enterprise-repo\" === id)",
									"        {",
									"            pm.expect(obj.title).to.eql(\"Alfresco Records Management Enterprise Repo\");",
									"            pm.expect(obj.version).to.eql(\"2.6.0\");",
									"        }    ",
									"    }",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/api/discovery",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"api",
								"discovery"
							]
						},
						"description": "This request will validate whether the repo is set up correctly "
					},
					"response": []
				},
				{
					"name": "Validate Share is deployed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad1108fa-a196-41e1-9f88-a182bca61b4c",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/* Disabled for DEPLOY-401",
									"pm.test(\"rm is installed part of share\", function () {",
									"pm.expect(pm.response.text()).to.include(\"Alfresco :: Records Management Global Customization - Enterprise\");",
									"});",
									"*/"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{shareUrl}}/page/modules/deploy",
							"host": [
								"{{shareUrl}}"
							],
							"path": [
								"page",
								"modules",
								"deploy"
							]
						},
						"description": "Validate Share is deployed correctly"
					},
					"response": []
				},
				{
					"name": "Validate Google Docs deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89681be8-b391-4efe-9ae6-8158742e93ff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{shareUrl}}/res/components/documentlibrary/actions/google-edit-flat-16.png",
							"host": [
								"{{shareUrl}}"
							],
							"path": [
								"res",
								"components",
								"documentlibrary",
								"actions",
								"google-edit-flat-16.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Solr deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7790914-dc1d-4fee-a06f-09cd10fca8a4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Solr response is valid\", function() {",
									"   var jsonData = pm.response.json();",
									"    var modulesArray= jsonData.resultset.queryInfo;",
									"    for(var key in modulesArray)",
									"    {",
									"        var obj = modulesArray[key];",
									"        var id = obj.numberFound;",
									"        console.log(id);",
									"        pm.expect(id).to.be.eql(\"199\");",
									"    }    ",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/s/api/solrstats",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"s",
								"api",
								"solrstats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02 Token-generation",
			"description": null,
			"item": [
				{
					"name": "Generate Keycloak access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66c97421-4cf8-4772-a8d1-15cf39216dd7",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token is bearer token\", function () {",
									"    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
									"});",
									"",
									"pm.test(\"Response contains access token\", function () {",
									"    pm.expect(\"access_token\" in jsonData).to.be.true;",
									"});",
									"",
									"var tokens=JSON.parse(responseBody); ",
									"postman.setGlobalVariable(\"kcAccessToken\", tokens.access_token); ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{identityServiceClientId}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{testUserUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{testUserPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{identityServiceUrl}}/realms/{{identityServiceRealm}}/protocol/openid-connect/token",
							"host": [
								"{{identityServiceUrl}}"
							],
							"path": [
								"realms",
								"{{identityServiceRealm}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "03 ACS-token-auth",
			"description": null,
			"item": [
				{
					"name": "Retrieve test user profile using token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf5678ae-cc22-4e8c-967a-25809a0a6a1c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Username in response is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    var userName= jsonData.entry.firstName;",
									"    pm.expect(userName).to.be.eql(pm.variables.get(\"testUserUsername\"));",
									"});",
									"",
									"pm.test(\"Id in response is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    var id = jsonData.entry.id;",
									"    pm.expect(id).to.be.eql(pm.variables.get(\"testUserUsername\"));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/api/-default-/public/alfresco/versions/1/people/-me-",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"people",
								"-me-"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create content using test user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6999b794-4487-4081-bb73-f87efdb8c75c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Created content has test user metadata\", function () {",
									"    var jsonData = pm.response.json();",
									"    var userName = jsonData.entry.createdByUser.id;",
									"    pm.expect(userName).to.be.eql(pm.variables.get(\"testUserUsername\"));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"hrusertestfile.txt\",\n  \"nodeType\":\"cm:content\"\n}"
						},
						"url": {
							"raw": "{{acsUrl}}/api/-default-/public/alfresco/versions/1/nodes/-my-/children",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"-my-",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve test user's files using token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a2f9c82-c9a9-45ed-8941-66a585c19b4a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User Id in file list is valid\", function() {",
									"    var jsonData = pm.response.json();",
									"    var modulesArray = jsonData.list.source.properties;",
									"    for (var key in modulesArray) {",
									"        var obj = modulesArray[key];",
									"        var id = obj.id;",
									"        pm.expect(id).to.be.eql(pm.variables.get(\"testUserUsername\"));",
									"    }",
									"});",
									"",
									"pm.test(\"File name in file list is valid\", function() {",
									"    var jsonData = pm.response.json();",
									"    var userName = jsonData.list.entries.properties;",
									"    for (var key in userName) {",
									"        var obj = modulesArray[key];",
									"        var id = obj.name;",
									"        pm.expect(id).to.be.eql(\"hrusertestfile.txt\");",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/api/-default-/public/alfresco/versions/1/nodes/-my-/children?includeSource=true",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"-my-",
								"children"
							],
							"query": [
								{
									"key": "includeSource",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CMIS API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "736642b9-1e60-431a-968c-c4c8edd11642",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Server signature contains Alfresco\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Alfresco\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/api/-default-/public/cmis/versions/1.1/browser",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"api",
								"-default-",
								"public",
								"cmis",
								"versions",
								"1.1",
								"browser"
							]
						}
					},
					"response": []
				},
				{
					"name": "v0 API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f028067-607b-4d17-8bcb-5017e991c9d5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test site title is valid\", function () {",
									"      pm.expect(pm.response.text()).to.include(\"Sample: Web Site Design Project\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{acsUrl}}/service/api/sites",
							"host": [
								"{{acsUrl}}"
							],
							"path": [
								"service",
								"api",
								"sites"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "beeea6be-c458-4b61-9614-c4f666c95ea5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "edd085d8-9340-4dcd-9431-79e424f51d82",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "04 APS-basic-auth",
			"description": "This folder will contain all the cases related to APS",
			"item": [
				{
					"name": "Get APS version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cfef929-277b-4980-b44e-e787fa8560fe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"APS edition string is valid\", function () {",
									"    var jsonData = pm.response.json().edition;",
									"    pm.expect(jsonData).to.eql(\"Alfresco Process Services (powered by Activiti)\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apsUrl}}/api/enterprise/app-version",
							"host": [
								"{{apsUrl}}"
							],
							"path": [
								"api",
								"enterprise",
								"app-version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create local user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "707cbbc8-69d5-4a7e-860e-ce75ef35fabb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \n\t\"firstName\": \"Test\", \n\t\"lastName\": \"User\", \n\t\"fullname\": \"Test User\", \n\t\"email\": \"{{testUserEmail}}\", \n\t\"password\": \"Fifi4567\"\n}"
						},
						"url": {
							"raw": "{{apsUrl}}/api/enterprise/admin/users",
							"host": [
								"{{apsUrl}}"
							],
							"path": [
								"api",
								"enterprise",
								"admin",
								"users"
							]
						},
						"description": "Creates local user with dummy password. Note there are password strenght requirements on dummy password."
					},
					"response": []
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{apsLocalAdminPassword}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{apsLocalAdminUser}}",
						"type": "string"
					},
					{
						"key": "saveHelperData",
						"type": "any"
					},
					{
						"key": "showPassword",
						"value": false,
						"type": "boolean"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b016d990-fa80-491b-84b8-04734fa51b55",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5455ed2b-225f-44a7-b0d3-07187af3fb2e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "05 APS-token-auth",
			"description": "",
			"item": [
				{
					"name": "Get user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c336edd3-a6c0-43bc-a0ff-86ff887c2d4e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Email in user's profile is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"testUserEmail\"));",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{kcAccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apsUrl}}/api/enterprise/profile",
							"host": [
								"{{apsUrl}}"
							],
							"path": [
								"api",
								"enterprise",
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "77beb5f0-bcc0-4cd1-abbe-06b51a16a847",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ec22fea0-9e29-4139-91f2-9a14f94f3d8a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auth Gateway routes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db57447f-44f7-4e84-bbc2-7ed8ebf53c4b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{kcAccessToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/actuator/routes",
					"host": [
						"{{url}}"
					],
					"path": [
						"actuator",
						"routes"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d3d29c75-6249-47a2-a5a4-6c565d86521b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c685c9b9-3ef9-47df-9308-e1001365c38c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "96bbb1d5-6fa4-4593-8962-4b7501ce01d6",
			"key": "acsUrl",
			"value": "{{url}}/alfresco",
			"type": "string",
			"description": ""
		},
		{
			"id": "bc8de51e-a9aa-4b24-af00-0e09b5b0b3f3",
			"key": "shareUrl",
			"value": "{{url}}/share",
			"type": "string",
			"description": ""
		},
		{
			"id": "74a7c1f4-eb96-48bb-a15f-ea3f3257051d",
			"key": "apsUrl",
			"value": "{{url}}/activiti-app",
			"type": "string",
			"description": ""
		},
		{
			"id": "95c3e9ff-ed17-434d-b17c-05efea526f5a",
			"key": "identityServiceUrl",
			"value": "{{url}}/auth",
			"type": "string",
			"description": ""
		},
		{
			"id": "673ddff2-9a0b-410e-80e8-79bef73670dc",
			"key": "identityServiceRealm",
			"value": "springboot",
			"type": "string",
			"description": ""
		},
		{
			"id": "faab53fd-649a-4c29-83d2-e9a2320bdcf2",
			"key": "identityServiceClientId",
			"value": "activiti",
			"type": "string",
			"description": ""
		},
		{
			"id": "3080ec0a-47f7-4562-97cb-902744224582",
			"key": "testUserUsername",
			"value": "hruser",
			"type": "string",
			"description": ""
		},
		{
			"id": "df294a87-a5f4-443b-aa7e-2c7848e72343",
			"key": "testUserPassword",
			"value": "password",
			"type": "string",
			"description": ""
		},
		{
			"id": "775c5662-ffca-487e-81dc-0687347a3142",
			"key": "testUserEmail",
			"value": "test@test.com",
			"type": "string",
			"description": ""
		},
		{
			"id": "24e784b0-363e-4884-a437-5a236ec6cbd0",
			"key": "apsLocalAdminUser",
			"value": "admin@app.activiti.com",
			"type": "string",
			"description": ""
		},
		{
			"id": "cfd0ffe1-cd75-4990-a75e-b8405c9376f6",
			"key": "apsLocalAdminPassword",
			"value": "admin",
			"type": "string",
			"description": ""
		}
	]
}